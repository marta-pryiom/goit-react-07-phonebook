{"version":3,"sources":["Component/ContactList/ContactList.module.css","Component/Filter/Filter.module.css","Component/App/App.module.css","Component/Container/Container.module.css","Component/Container/Container.js","redux/contacts/operations.js","redux/selectors.js","Component/ContactForm/ContactForm.js","redux/contacts/actions.js","Component/Filter/Filter.js","Component/ContactList/ContactList.js","Component/App/App.js","redux/contacts/reducers.js","redux/store.js","index.js","Component/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","s","container","axios","defaults","baseURL","fetchContacts","createAsyncThunk","__","a","rejectWithValue","get","data","message","submit","contact","post","deleteContact","contactId","delete","id","filterValue","state","contacts","filter","getContacts","items","getVisibleContact","createSelector","normalizedFilter","toLowerCase","name","includes","ContactForm","dispatch","useDispatch","useState","setName","number","setNumber","useSelector","handleChange","e","target","value","reset","Box","Form","onSubmit","preventDefault","some","el","alert","Label","Input","type","placeholder","pattern","title","required","autoComplete","onChange","Btn","disabled","length","filteredContacts","createAction","Filter","FilterTitle","currentTarget","ContactList","console","log","useEffect","map","phone","ContactItem","Text","onClick","App","createReducer","fulfilled","_","payload","error","rejected","_state","pending","rootReducer","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff8b5222.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__16R6c\",\"ContactItem\":\"ContactList_ContactItem__1TPAL\",\"Text\":\"ContactList_Text__1_5Hk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__3hehL\",\"FilterTitle\":\"Filter_FilterTitle__1OGma\",\"Input\":\"Filter_Input__3JDZf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__LZeu1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1kMyA\"};","import s from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Container({ children }) {\r\n    return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://61960f1e902243001762fa15.mockapi.io';\r\nexport const fetchContacts = createAsyncThunk(\r\n    'fetchContact',\r\n    async (__, { rejectWithValue }) => {\r\n        try {\r\n            const { data } = await axios.get('/contacts');\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    },\r\n);\r\n\r\nexport const submit = createAsyncThunk(\r\n    'addContact',\r\n    async (contact, { rejectWithValue }) => {\r\n        try {\r\n            const { data } = await axios.post('/contacts', contact);\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    },\r\n);\r\n/*використовую Thunk */\r\nexport const deleteContact = createAsyncThunk(\r\n    'deleteContact',\r\n    async (contactId, { rejectWithValue }) => {\r\n        try {\r\n            const {\r\n                data: { id },\r\n            } = await axios.delete(`/contacts/${contactId}`);\r\n            return id;\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    },\r\n);\r\n","// import { createSelector } from 'reselect';\r\nimport { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const filterValue = state => state.contacts.filter;\r\nexport const getContacts = state => state.contacts.items;\r\n\r\nexport const getVisibleContact = createSelector(\r\n    [filterValue, getContacts],\r\n    (filter, items) => {\r\n        let normalizedFilter = filter.toLowerCase();\r\n        return items.filter(({ name }) =>\r\n            name.toLowerCase().includes(normalizedFilter),\r\n        );\r\n    },\r\n);\r\n","import { useState } from 'react';\r\nimport { submit } from '../../redux/contacts/operations';\r\nimport { getContacts } from '../../redux/selectors';\r\nimport s from './ContactForm.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nfunction ContactForm() {\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const contacts = useSelector(getContacts);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const searchSameName = contacts.some(\r\n            el => el.name.toLowerCase() === name.toLowerCase(),\r\n        );\r\n        if (searchSameName) {\r\n            return alert(`${name} is already in contacts`);\r\n        }\r\n        dispatch(submit({ name, number }));\r\n        reset();\r\n    };\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const reset = () => {\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n\r\n    return (\r\n        <div className={s.Box}>\r\n            <form className={s.Form} onSubmit={handleSubmit}>\r\n                <label className={s.Label}>\r\n                    Name\r\n                    <input\r\n                        className={s.Input}\r\n                        value={name}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        placeholder=\"Enter name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        autoComplete=\"true\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n\r\n                <label className={s.Label}>\r\n                    Number\r\n                    <input\r\n                        className={s.Input}\r\n                        type=\"tel\"\r\n                        value={number}\r\n                        name=\"number\"\r\n                        placeholder=\"Enter number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        autoComplete=\"true\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n\r\n                <button className={s.Btn} disabled={name.length === 0}>\r\n                    Add contact\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContactForm;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const filteredContacts = createAction('contact/filter')\r\n","import s from './Filter.module.css';\r\nimport { filteredContacts } from '../../redux/contacts/actions';\r\nimport { filterValue } from '../../redux/selectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nfunction Filter() {\r\n    const value = useSelector(filterValue);\r\n    const dispatch = useDispatch();\r\n    const onChange = e => {\r\n        dispatch(filteredContacts(e.currentTarget.value));\r\n    };\r\n    return (\r\n        <div className={s.Filter}>\r\n            <label className={s.FilterTitle}>\r\n                Find contacts by name\r\n                <input\r\n                    className={s.Input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filter;\r\n","import s from './ContactList.module.css';\r\nimport { deleteContact, fetchContacts } from '../../redux/contacts/operations';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getVisibleContact } from '../../redux/selectors';\r\nimport { useEffect } from 'react';\r\n\r\nfunction ContactList() {\r\n    const contacts = useSelector(getVisibleContact);\r\n    console.log(contacts);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchContacts());\r\n    }, [dispatch]);\r\n    return (\r\n        <ul className={s.ContactList}>\r\n            {contacts.map(({ name, number, phone, id }) => (\r\n                <li key={id} id={s.ContactItem}>\r\n                    <p className={s.Text}>{name}</p>\r\n                    <p className={s.Text}>{number || phone}</p>\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => dispatch(deleteContact(id))}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ContactList;\r\n","import s from './App.module.css';\r\nimport Container from '../Container';\r\nimport ContactForm from '../ContactForm';\r\nimport Filter from '../Filter';\r\nimport ContactList from '../ContactList';\r\n\r\nfunction App() {\r\n    return (\r\n        <Container>\r\n            <h1 className={s.title}>Phonebook</h1>\r\n            <ContactForm />\r\n            <h2 className={s.title}>Contacts</h2>\r\n            <Filter />\r\n            <ContactList />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport { filteredContacts, contactError } from './actions';\r\nimport { fetchContacts, submit, deleteContact } from './operations';\r\n\r\nexport const items = createReducer([], {\r\n    [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n    [submit.fulfilled]: (state, { payload }) => {\r\n        return [payload, ...state];\r\n    },\r\n    [deleteContact.fulfilled]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\nexport const error = createReducer(null, {\r\n    [fetchContacts.rejected]: (_, { payload }) => payload,\r\n    [submit.rejected]: (_state, { payload }) => payload,\r\n    [deleteContact.rejected]: (_state, { payload }) => payload,\r\n});\r\nexport const loading = createReducer(false, {\r\n    [fetchContacts.pending]: () => true,\r\n    [fetchContacts.fulfilled]: () => false,\r\n    [fetchContacts.rejected]: () => false,\r\n    [submit.pending]: () => true,\r\n    [submit.fulfilled]: () => false,\r\n    [submit.rejected]: () => false,\r\n});\r\nexport const filter = createReducer('', {\r\n    [filteredContacts]: (_, { payload }) => payload,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport { items, filter, error } from './contacts/reducers';\r\nimport {\r\n    // persistStore,\r\n    // persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\n\r\nimport logger from 'redux-logger';\r\n\r\nconst rootReducer = combineReducers({ items, filter, error });\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        contacts: rootReducer,\r\n    },\r\n    middleware: getDefaultMiddleware =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: {\r\n                ignoredActions: [\r\n                    FLUSH,\r\n                    REHYDRATE,\r\n                    PAUSE,\r\n                    PERSIST,\r\n                    PURGE,\r\n                    REGISTER,\r\n                ],\r\n            },\r\n        }).concat(logger),\r\n});\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './Component/App/App';\nimport store from './redux/store';\n// import {store, persistor } from './redux/store';\n// import { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n    <React.StrictMode>\n        {/* <PersistGate persistor={persistor} loading={null}> */}\n        <Provider store={store}>\n            <App />\n        </Provider>\n        {/* </PersistGate> */}\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Box\":\"ContactForm_Box__3inv0\",\"Form\":\"ContactForm_Form__1bHsB\",\"Label\":\"ContactForm_Label__3CvyK\",\"Input\":\"ContactForm_Input__2Nxys\",\"Btn\":\"ContactForm_Btn__D1K3j\"};"],"sourceRoot":""}